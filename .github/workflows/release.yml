name: Release version
on:
  push:
    branches: [ 'main' ]
jobs:
  build:
    name: Clean build and package the code
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: build #-Dquarkus.package.type=native
          gradle-home-cache-cleanup: true

  release:
    needs: build
    name: Create Release
    runs-on: 'ubuntu-latest'
    steps:
      - name: Create Semantic release
        id: semver
      -  uses: actions/checkout@master
      -  uses: go-semantic-release/action@v1
         with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          echo version = v${{ steps.semver.outputs.version }}

      - uses: actions/create-release@v1
        name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.semver.outputs.version }}
          release_name: v${{ steps.semver.outputs.version }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ github.repository }}.zip
          asset_name: ./${{ github.repository }}.zip
          asset_content_type: application/zip


