name: Release version
on:
  push:
    branches: [ 'main' ]
jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Application Version
        id: versioning
        uses: paulhatch/semantic-version@v4.0.2
        with:
          branch: main
          tag_prefix: 'v'
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          search_commit_body: true
          format: 'v${major}.${minor}.${patch}'
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute Gradle build
        run: ./gradlew build
      - name: Publish using Axion
        run: |
            # Fetch a full copy of the repo, as required by release plugin:
            git fetch --tags --unshallow
            # Run release:
            ./gradlew release

      - uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip --junk-paths gradle-ci-cd-demo README.md

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.versioning.outputs.version }}
          release_name: ${{ steps.versioning.outputs.version }}

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./gradle-ci-cd-demo.zip
          asset_name: ./gradle-ci-cd-demo-${{ steps.versioning.outputs.version }}.zip
          asset_content_type: application/zip