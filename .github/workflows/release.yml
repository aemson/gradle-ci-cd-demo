name: Release version
on:
  push:
    branches: [ 'main' ]
jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:

      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Setup Gradle and build package
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: build -Dquarkus.package.type=native
          gradle-home-cache-cleanup: true

  release:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: v0.${{ github.run_number }}.0
          release_name: v0.${{ github.run_number }}.0

      - name: Publish using Axion
        run: |
          # Fetch a full copy of the repo, as required by release plugin:
          git fetch --tags --unshallow
          # Run release:
          ./gradlew release

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./gradle-ci-cd-demo.zip
          asset_name: ./gradle-ci-cd-demo.zip
          asset_content_type: application/zip

  deploy:
    needs: [ build, release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'   # optional: defaults to us-east-1